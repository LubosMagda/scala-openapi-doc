# https://www.playframework.com/documentation/latest/Configuration
# https://www.playframework.com/documentation/2.6.x/resources/confs/filters-helpers/reference.conf
# Uses HOCON (Human Optimized Config Object Notation) notation # https://github.com/typesafehub/config/blob/master/HOCON.md

# Disable default filters
# https://www.playframework.com/documentation/2.6.x/Filters
play.filters {

  # Default list of enabled filters, configured by play.api.http.EnabledFilters
  #enabled += play.filters.hosts.AllowedHostsFilter
  #enabled += play.filters.csrf.CSRFFilter
  #enabled += play.filters.headers.SecurityHeadersFilter

  # Other filters
  enabled += play.filters.cors.CORSFilter

  hosts {

    # A list of valid hosts (e.g. "example.com") or suffixes of valid hosts (e.g. ".example.com")
    # Note that ".example.com" will match example.com and any subdomain of example.com, with or without a trailing dot.
    # "." matches all domains, and "" matches an empty or nonexistent host.
    allowed = ["localhost", ".local", ".ngrok.io"]
  }

  # CORS filter configuration
  cors {

    # The path prefixes to filter.
    #pathPrefixes = ["/"]

    # The allowed origins. If null, all origins are allowed.
    #allowedOrigins = null

    # The allowed HTTP methods. If null, all methods are allowed
    #allowedHttpMethods = null

    # The allowed HTTP headers. If null, all headers are allowed.
    #allowedHttpHeaders = null

    # The exposed headers
    #exposedHeaders = []

    # Whether to support credentials
    #supportsCredentials = true

    # The maximum amount of time the CORS meta data should be cached by the client
    #preflightMaxAge = 1 hour

    # Whether to serve forbidden origins as non-CORS requests
    #serveForbiddenOrigins = false
  }
}
